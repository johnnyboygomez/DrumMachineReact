{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["drumData","q","name","id","src","w","e","a","s","d","z","x","c","ButtonDr","className","this","props","drum","onClick","audioId","drumSrc","type","React","Component","DrumMachine","state","displayText","handleClick","bind","setTheText","handleKeydown","audio","document","getElementById","play","addEventListener","drumId","String","fromCharCode","which","toLowerCase","setState","displayDrumName","renderButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App"],"mappings":"+NAEMA,EAAW,CACbC,EAAG,CACDC,KAAM,aACNC,GAAI,IACJC,IAAK,6CAEPC,EAAG,CACDH,KAAM,OACNC,GAAI,IACJC,IAAK,0CAEPE,EAAG,CACDJ,KAAM,cACNC,GAAI,IACJC,IAAK,0CAEPG,EAAG,CACDL,KAAM,eACNC,GAAI,IACJC,IAAK,2CAEPI,EAAG,CACDN,KAAM,QACNC,GAAI,IACJC,IAAK,2CAEPK,EAAG,CACDP,KAAM,OACNC,GAAI,IACJC,IAAK,0CAEPM,EAAG,CACDR,KAAM,OACNC,GAAI,IACJC,IAAK,0CAEPO,EAAG,CACDT,KAAM,OACNC,GAAI,IACJC,IAAK,0CAEPQ,EAAG,CACDV,KAAM,MACNC,GAAI,IACJC,IAAK,0CAILS,E,uKAEJ,OACE,yBAAQC,UAAU,WAAWX,GAAIY,KAAKC,MAAMC,KAAMC,QAASH,KAAKC,MAAME,QAAtE,UACGH,KAAKC,MAAMG,QACZ,uBAAOL,UAAU,OAAOX,GAAIY,KAAKC,MAAMG,QAASf,IAAKW,KAAKC,MAAMI,QAASC,KAAK,qB,GAL7DC,IAAMC,WAiFdC,E,kDArEf,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXC,YAAa,eAEf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBAPJ,E,yDASNnB,GAAI,IAAD,OACd,OAAO,cAAC,EAAD,CACPQ,KAAQR,EACRU,QAAWnB,EAASS,GAAGN,GACvBiB,QAAWpB,EAASS,GAAGL,IACvBc,QAAS,kBAAM,EAAKS,YAAYlB,Q,kCAItBA,GACV,IAAIsB,EAAQ/B,EAASS,GAAGN,IACxB4B,EAAQC,SAASC,eAAeF,IAC1BG,OACNnB,KAAKc,WAAWpB,K,0CAGhBuB,SAASG,iBAAiB,UAAWpB,KAAKe,iB,oCAG9BxB,GACZ,IAAI8B,EAASC,OAAOC,aAAahC,EAAEiC,OAC/BnB,EAAUY,SAASC,eAAeG,GAClChB,GAASA,EAAQc,OACrBE,EAASA,EAAOI,cACZpB,GAASL,KAAKc,WAAWO,K,iCAEpB3B,GACTM,KAAK0B,SAAS,CACZf,YAAa1B,EAASS,GAAGP,S,+BAI3B,IAAIwC,EAAkB3B,KAAKU,MAAMC,YAClC,OACE,sBAAKvB,GAAG,eAAR,UACK,sBAAKA,GAAG,YAAR,UACI,sBAAKA,GAAG,QAAQW,UAAU,MAA1B,UACKC,KAAK4B,aAAa,KAClB5B,KAAK4B,aAAa,KAClB5B,KAAK4B,aAAa,QAEvB,sBAAKxC,GAAG,QAAQW,UAAU,MAA1B,UACKC,KAAK4B,aAAa,KAClB5B,KAAK4B,aAAa,KAClB5B,KAAK4B,aAAa,QAEvB,sBAAKxC,GAAG,QAAQW,UAAU,MAA1B,UACKC,KAAK4B,aAAa,KAClB5B,KAAK4B,aAAa,KAClB5B,KAAK4B,aAAa,WAG3B,qBAAK7B,UAAU,OAAf,SACR,qBAAKX,GAAG,UAAUW,UAAU,YAA5B,SAAyC4B,a,GAhEfpB,IAAMC,WChDjBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFxB,SAASC,eAAe,SAM1BW,M","file":"static/js/main.c86656cc.chunk.js","sourcesContent":["import React from 'react';\n\nconst drumData = {\n    q: {\n      name: \"Open Hihat\",\n      id: \"Q\",\n      src: \"https://www.dowling.ca/sounds/openhat.wav\"\n    },\n    w: {\n      name: \"Tink\",\n      id: \"W\",\n      src: 'https://www.dowling.ca/sounds/tink.wav'\n    },\n    e: {\n      name: \"Ride Cymbal\",\n      id: \"E\",\n      src: \"https://www.dowling.ca/sounds/ride.wav\"\n    },\n    a: {\n      name: \"Closed Hihat\",\n      id: \"A\",\n      src: \"https://www.dowling.ca/sounds/hihat.wav\"\n    },\n    s: {\n      name: \"Snare\",\n      id: \"S\",\n      src: \"https://www.dowling.ca/sounds/snare.wav\"\n    },\n    d: {\n      name: \"Kick\",\n      id: \"D\",\n      src: \"https://www.dowling.ca/sounds/kick.wav\"\n    },\n    z: {\n      name: \"Boom\",\n      id: \"Z\",\n      src: \"https://www.dowling.ca/sounds/boom.wav\"\n    },\n    x: {\n      name: \"Clap\",\n      id: \"X\",\n      src: \"https://www.dowling.ca/sounds/clap.wav\"\n    },\n    c: {\n      name: \"Tom\",\n      id: \"C\",\n      src: \"https://www.dowling.ca/sounds/tom.wav\"\n    }\n}\n\nclass ButtonDr extends React.Component {\n  render() {\n  return (\n    <button className=\"drum-pad\" id={this.props.drum} onClick={this.props.onClick}>\n      {this.props.audioId}\n      <audio className='clip' id={this.props.audioId} src={this.props.drumSrc} type='audio/wav'></audio>     \n    </button>\n  );\n}\n}\nclass DrumMachine extends React.Component\n{\nconstructor(props) {\n  super(props);\n  this.state = {\n    displayText: \"placeholder\"\n  }\n  this.handleClick = this.handleClick.bind(this);\n  this.setTheText = this.setTheText.bind(this);\n  this.handleKeydown = this.handleKeydown.bind(this);\n  }\nrenderButton(d) {\n  return(<ButtonDr \n  drum = {d} \n  audioId = {drumData[d].id}\n  drumSrc = {drumData[d].src}\n  onClick={() => this.handleClick(d)}\n  />\n  );\n}\nhandleClick(d) {\n  let audio = drumData[d].id\n  audio = document.getElementById(audio)\n  audio.play()\n  this.setTheText(d)\n}\ncomponentDidMount() {  \n  document.addEventListener(\"keydown\", this.handleKeydown); \n  }\n\nhandleKeydown(e) {\n  let drumId = String.fromCharCode(e.which)\n  let drumSrc = document.getElementById(drumId)\n  if (drumSrc) drumSrc.play()\n  drumId = drumId.toLowerCase()\n  if (drumSrc) this.setTheText(drumId)\n}\nsetTheText(d) {\n  this.setState({\n    displayText: drumData[d].name\n  })\n}\nrender() {\n  let displayDrumName = this.state.displayText\n return (\n   <div id=\"drum-machine\">\n        <div id=\"drum-rows\">\n            <div id=\"a-row\" className=\"row\" >\n                {this.renderButton(\"q\")}\n                {this.renderButton(\"w\")}\n                {this.renderButton(\"e\")}\n            </div>\n            <div id=\"b-row\" className=\"row\">\n                {this.renderButton(\"a\")}\n                {this.renderButton(\"s\")}\n                {this.renderButton(\"d\")}\n            </div>\n            <div id=\"c-row\" className=\"row\">\n                {this.renderButton(\"z\")}\n                {this.renderButton(\"x\")}\n                {this.renderButton(\"c\")}\n            </div>\n        </div>\n        <div className=\"card\">\n<div id=\"display\" className=\"card-body\">{displayDrumName}</div>\n        </div>\n    </div>\n );\n}\n}\n\nexport default DrumMachine;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}