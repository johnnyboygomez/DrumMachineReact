{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["drumData","openhat","name","id","src","tink","ride","hihat","snare","kick","boom","clap","tom","ButtonDr","props","className","this","drum","onClick","callIt","scr","drumSrc","type","React","Component","App","handleClick","bind","d","audio","document","getElementById","play","console","log","renderButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+NAGMA,G,MAAW,CACbC,QAAS,CACPC,KAAM,aACNC,GAAI,IACJC,IAAK,sBAEPC,KAAM,CACJH,KAAM,OACNC,GAAI,IACJC,IAAK,8DAEPE,KAAM,CACJJ,KAAM,cACNC,GAAI,IACJC,IAAK,mBAEPG,MAAO,CACLL,KAAM,eACNC,GAAI,IACJC,IAAK,oBAEPI,MAAO,CACLN,KAAM,QACNC,GAAI,IACJC,IAAK,oBAEPK,KAAM,CACJP,KAAM,OACNC,GAAI,IACJC,IAAK,mBAEPM,KAAM,CACJR,KAAM,OACNC,GAAI,IACJC,IAAK,mBAEPO,KAAM,CACJT,KAAM,OACNC,GAAI,IACJC,IAAK,mBAEPQ,IAAK,CACHV,KAAM,MACNC,GAAI,IACJC,IAAK,oBAILS,E,kDACJ,WAAYC,GAAQ,uCACZA,G,qDAGR,OACE,yBAAQC,UAAU,WAAWZ,GAAIa,KAAKF,MAAMG,KAAMC,QAASF,KAAKF,MAAMI,QAAtE,UACGF,KAAKF,MAAMK,OACZ,uBAAOJ,UAAU,OAAOZ,GAAIa,KAAKF,MAAMK,OAAQC,IAAKJ,KAAKF,MAAMO,QAASC,KAAK,qB,GAR5DC,IAAMC,WAgEdC,E,kDAjDf,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACHY,YAAc,EAAKA,YAAYC,KAAjB,gBAFA,E,yDAINC,GAAI,IAAD,OACd,OAAO,cAAC,EAAD,CACPX,KAAQW,EACRT,OAAUnB,EAAS4B,GAAGzB,GACtBkB,QAAWrB,EAAS4B,GAAGxB,IACvBc,QAAS,kBAAM,EAAKQ,YAAYE,Q,kCAItBA,GACV,IAAIC,EAAQ7B,EAAS4B,GAAGzB,IACxB0B,EAAQC,SAASC,eAAeF,IAE1BG,OACNC,QAAQC,IAAIL,K,+BAIb,OACE,sBAAK1B,GAAG,eAAR,UACK,sBAAKA,GAAG,YAAR,UACI,sBAAKA,GAAG,QAAQY,UAAU,MAA1B,UACKC,KAAKmB,aAAa,WAClBnB,KAAKmB,aAAa,QAClBnB,KAAKmB,aAAa,WAEvB,sBAAKhC,GAAG,QAAQY,UAAU,MAA1B,UACKC,KAAKmB,aAAa,SAClBnB,KAAKmB,aAAa,SAClBnB,KAAKmB,aAAa,WAEvB,sBAAKhC,GAAG,QAAQY,UAAU,MAA1B,UACKC,KAAKmB,aAAa,QAClBnB,KAAKmB,aAAa,QAClBnB,KAAKmB,aAAa,aAG3B,qBAAKpB,UAAU,OAAf,SACR,qBAAKZ,GAAG,UAAUY,UAAU,YAA5B,2C,GA5CkBQ,IAAMC,WCpDTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.a0216866.chunk.js","sourcesContent":["import React from 'react';\nimport ReactFCCtest from 'react-fcctest';\n\nconst drumData = {\n    openhat: {\n      name: \"Open Hihat\",\n      id: \"Q\",\n      src: \"sounds/openhat.wav\"\n    },\n    tink: {\n      name: \"Tink\",\n      id: \"W\",\n      src: 'http://www.electrongate.com/dmxfiles/drumtraks/SCI_RIM.wav'\n    },\n    ride: {\n      name: \"Ride Cymbal\",\n      id: \"E\",\n      src: \"sounds/ride.wav\"\n    },\n    hihat: {\n      name: \"Closed Hihat\",\n      id: \"A\",\n      src: \"sounds/hihat.wav\"\n    },\n    snare: {\n      name: \"Snare\",\n      id: \"S\",\n      src: \"sounds/snare.wav\"\n    },\n    kick: {\n      name: \"Kick\",\n      id: \"D\",\n      src: \"sounds/kick.wav\"\n    },\n    boom: {\n      name: \"Boom\",\n      id: \"Z\",\n      src: \"sounds/boom.wav\"\n    },\n    clap: {\n      name: \"Clap\",\n      id: \"X\",\n      src: \"sounds/clap.wav\"\n    },\n    tom: {\n      name: \"Tom\",\n      id: \"C\",\n      src: \"sounds/tom.wav\"\n    }\n}\n\nclass ButtonDr extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n  return (\n    <button className=\"drum-pad\" id={this.props.drum} onClick={this.props.onClick}>\n      {this.props.callIt}\n      <audio className='clip' id={this.props.callIt} scr={this.props.drumSrc} type='audio/wav'></audio>     \n    </button>\n  );\n}\n}\nclass App extends React.Component\n{\nconstructor(props) {\n  super(props);\nthis.handleClick = this.handleClick.bind(this);\n  }\nrenderButton(d) {\n  return(<ButtonDr \n  drum = {d} \n  callIt = {drumData[d].id}\n  drumSrc = {drumData[d].src}\n  onClick={() => this.handleClick(d)}\n  />\n  );\n}\nhandleClick(d) {\n  let audio = drumData[d].id\n  audio = document.getElementById(audio)\n  //audio.currentTime = 0\n  audio.play()\n  console.log(audio)\n}\n\nrender() {\n return (\n   <div id=\"drum-machine\">\n        <div id=\"drum-rows\">\n            <div id=\"a-row\" className=\"row\" >\n                {this.renderButton(\"openhat\")}\n                {this.renderButton(\"tink\")}\n                {this.renderButton(\"ride\")}\n            </div>\n            <div id=\"b-row\" className=\"row\">\n                {this.renderButton(\"hihat\")}\n                {this.renderButton(\"snare\")}\n                {this.renderButton(\"kick\")}\n            </div>\n            <div id=\"c-row\" className=\"row\">\n                {this.renderButton(\"boom\")}\n                {this.renderButton(\"clap\")}\n                {this.renderButton(\"tom\")}\n            </div>\n        </div>\n        <div className=\"card\">\n<div id=\"display\" className=\"card-body\">This will be display</div>\n        </div>\n    </div>\n );\n}\n}\n\nexport default App;\n\n/*class Display extends React.Component\n  {\n    constructor(props) {\n      super(props);\n      }\n    componentDidMount() {\n      //const xdrumId = this.props.drumType;\n      console.log(\"Whoa!\")\n    }\n\nrender() {\n  return (\n    <p></p>\n  )}\n}\n*/\n/*componentDidMount() {   \nwindow.onkeydown = function(event) {\n    let k = event.key;\n    k = k.toUpperCase();\n    //alert(k);\n    let drumClk = document.getElementById(\"W\");\n    if(drumClk) drumClk.play();\n    }\n}\n*/\n/*componentDidMount() {   \n  window.onkeydown = function(event) {\n      let k = event.key;\n      k = k.toUpperCase();\n      let audio = drumData[d].id;\n      audio = document.getElementById(audio);\n      let drumClk = document.getElementById(audio);\n      console.log(audio)\n      //if(drumClk) drumClk.play();\n      }\n  }\n  */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}